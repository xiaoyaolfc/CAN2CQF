<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile>
  <compound kind="file">
    <name>IEEE8021QchBEFlow_m.h</name>
    <path>/home/xiaoyao/English_Path/omnetpp-5.5.1/samples/CAN4CQF/src/can4cqf/linklayer/message/</path>
    <filename>IEEE8021QchBEFlow__m_8h</filename>
    <class kind="class">CAN4CQF::IEEE8021QchBEFlow</class>
    <namespace>CAN4CQF</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MSGC_VERSION</name>
      <anchorfile>IEEE8021QchBEFlow__m_8h.html</anchorfile>
      <anchor>a77f5ea746b531cbdbc322a93741e33a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doParsimPacking</name>
      <anchorfile>namespaceCAN4CQF.html</anchorfile>
      <anchor>a2c25917425bc7f9783447737cc0667d9</anchor>
      <arglist>(omnetpp::cCommBuffer *b, const IEEE8021QchBEFlow &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doParsimUnpacking</name>
      <anchorfile>namespaceCAN4CQF.html</anchorfile>
      <anchor>a43b8b3414d214b8ac4987ac79f838b38</anchor>
      <arglist>(omnetpp::cCommBuffer *b, IEEE8021QchBEFlow &amp;obj)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>gcc-debug/src/can4cqf/linklayer/message/IEEE8021QchBEFlow_m.o.d</name>
    <path>/home/xiaoyao/English_Path/omnetpp-5.5.1/samples/CAN4CQF/out/gcc-debug/src/can4cqf/linklayer/message/</path>
    <filename>gcc-debug_2src_2can4cqf_2linklayer_2message_2IEEE8021QchBEFlow__m_8o_8d</filename>
  </compound>
  <compound kind="file">
    <name>gcc-release/src/can4cqf/linklayer/message/IEEE8021QchBEFlow_m.o.d</name>
    <path>/home/xiaoyao/English_Path/omnetpp-5.5.1/samples/CAN4CQF/out/gcc-release/src/can4cqf/linklayer/message/</path>
    <filename>gcc-release_2src_2can4cqf_2linklayer_2message_2IEEE8021QchBEFlow__m_8o_8d</filename>
  </compound>
  <compound kind="file">
    <name>IEEE8021QchTTFlow_m.h</name>
    <path>/home/xiaoyao/English_Path/omnetpp-5.5.1/samples/CAN4CQF/src/can4cqf/linklayer/message/</path>
    <filename>IEEE8021QchTTFlow__m_8h</filename>
    <class kind="class">CAN4CQF::IEEE8021QchTTFlow</class>
    <namespace>CAN4CQF</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MSGC_VERSION</name>
      <anchorfile>IEEE8021QchTTFlow__m_8h.html</anchorfile>
      <anchor>a77f5ea746b531cbdbc322a93741e33a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doParsimPacking</name>
      <anchorfile>namespaceCAN4CQF.html</anchorfile>
      <anchor>ae56fdbe4539903205353b382ecd76cdb</anchor>
      <arglist>(omnetpp::cCommBuffer *b, const IEEE8021QchTTFlow &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doParsimUnpacking</name>
      <anchorfile>namespaceCAN4CQF.html</anchorfile>
      <anchor>aa72401a4cd71dd3c936be24beffb202b</anchor>
      <arglist>(omnetpp::cCommBuffer *b, IEEE8021QchTTFlow &amp;obj)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>gcc-debug/src/can4cqf/linklayer/message/IEEE8021QchTTFlow_m.o.d</name>
    <path>/home/xiaoyao/English_Path/omnetpp-5.5.1/samples/CAN4CQF/out/gcc-debug/src/can4cqf/linklayer/message/</path>
    <filename>gcc-debug_2src_2can4cqf_2linklayer_2message_2IEEE8021QchTTFlow__m_8o_8d</filename>
  </compound>
  <compound kind="file">
    <name>gcc-release/src/can4cqf/linklayer/message/IEEE8021QchTTFlow_m.o.d</name>
    <path>/home/xiaoyao/English_Path/omnetpp-5.5.1/samples/CAN4CQF/out/gcc-release/src/can4cqf/linklayer/message/</path>
    <filename>gcc-release_2src_2can4cqf_2linklayer_2message_2IEEE8021QchTTFlow__m_8o_8d</filename>
  </compound>
  <compound kind="file">
    <name>PoolMessage_m.h</name>
    <path>/home/xiaoyao/English_Path/omnetpp-5.5.1/samples/CAN4CQF/src/can4cqf/linklayer/message/</path>
    <filename>PoolMessage__m_8h</filename>
    <class kind="class">CAN4CQF::PoolMessage</class>
    <namespace>CAN4CQF</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MSGC_VERSION</name>
      <anchorfile>PoolMessage__m_8h.html</anchorfile>
      <anchor>a77f5ea746b531cbdbc322a93741e33a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::list&lt; omnetpp::cMessage * &gt;</type>
      <name>cMessagePointerList</name>
      <anchorfile>namespaceCAN4CQF.html</anchorfile>
      <anchor>a47c803002d9932bdebcf77ceb107f466</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doParsimPacking</name>
      <anchorfile>namespaceCAN4CQF.html</anchorfile>
      <anchor>a50f8f0344e0949dd4f6cf4c80d1df727</anchor>
      <arglist>(omnetpp::cCommBuffer *b, const PoolMessage &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doParsimUnpacking</name>
      <anchorfile>namespaceCAN4CQF.html</anchorfile>
      <anchor>a362a02d857e1d3152eb509996abf571a</anchor>
      <arglist>(omnetpp::cCommBuffer *b, PoolMessage &amp;obj)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>gcc-debug/src/can4cqf/linklayer/message/PoolMessage_m.o.d</name>
    <path>/home/xiaoyao/English_Path/omnetpp-5.5.1/samples/CAN4CQF/out/gcc-debug/src/can4cqf/linklayer/message/</path>
    <filename>gcc-debug_2src_2can4cqf_2linklayer_2message_2PoolMessage__m_8o_8d</filename>
  </compound>
  <compound kind="file">
    <name>gcc-release/src/can4cqf/linklayer/message/PoolMessage_m.o.d</name>
    <path>/home/xiaoyao/English_Path/omnetpp-5.5.1/samples/CAN4CQF/out/gcc-release/src/can4cqf/linklayer/message/</path>
    <filename>gcc-release_2src_2can4cqf_2linklayer_2message_2PoolMessage__m_8o_8d</filename>
  </compound>
  <compound kind="file">
    <name>Rxgate.cc</name>
    <path>/home/xiaoyao/English_Path/omnetpp-5.5.1/samples/CAN4CQF/src/can4cqf/linklayer/shaper/IEEE8021Qch/</path>
    <filename>Rxgate_8cc</filename>
    <includes id="Rxgate_8h" name="Rxgate.h" local="yes" imported="no">Rxgate.h</includes>
    <namespace>CAN4CQF</namespace>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>namespaceCAN4CQF.html</anchorfile>
      <anchor>a83a8d6f3469bc428bf4c07f127c2abcc</anchor>
      <arglist>(Rxgate)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Rxgate.h</name>
    <path>/home/xiaoyao/English_Path/omnetpp-5.5.1/samples/CAN4CQF/src/can4cqf/linklayer/shaper/IEEE8021Qch/</path>
    <filename>Rxgate_8h</filename>
    <class kind="class">CAN4CQF::Rxgate</class>
    <namespace>CAN4CQF</namespace>
  </compound>
  <compound kind="file">
    <name>gcc-debug/src/can4cqf/linklayer/shaper/IEEE8021Qch/Rxgate.o.d</name>
    <path>/home/xiaoyao/English_Path/omnetpp-5.5.1/samples/CAN4CQF/out/gcc-debug/src/can4cqf/linklayer/shaper/IEEE8021Qch/</path>
    <filename>gcc-debug_2src_2can4cqf_2linklayer_2shaper_2IEEE8021Qch_2Rxgate_8o_8d</filename>
  </compound>
  <compound kind="file">
    <name>gcc-release/src/can4cqf/linklayer/shaper/IEEE8021Qch/Rxgate.o.d</name>
    <path>/home/xiaoyao/English_Path/omnetpp-5.5.1/samples/CAN4CQF/out/gcc-release/src/can4cqf/linklayer/shaper/IEEE8021Qch/</path>
    <filename>gcc-release_2src_2can4cqf_2linklayer_2shaper_2IEEE8021Qch_2Rxgate_8o_8d</filename>
  </compound>
  <compound kind="class">
    <name>CAN4CQF::IEEE8021QchBEFlow</name>
    <filename>classCAN4CQF_1_1IEEE8021QchBEFlow.html</filename>
    <member kind="function">
      <type></type>
      <name>IEEE8021QchBEFlow</name>
      <anchorfile>classCAN4CQF_1_1IEEE8021QchBEFlow.html</anchorfile>
      <anchor>a3591031b6fd59bb0c6c87936145f8e2a</anchor>
      <arglist>(const char *name=nullptr, short kind=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IEEE8021QchBEFlow</name>
      <anchorfile>classCAN4CQF_1_1IEEE8021QchBEFlow.html</anchorfile>
      <anchor>ae3eb2b3ddabf14d6f5152902e40511b0</anchor>
      <arglist>(const IEEE8021QchBEFlow &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~IEEE8021QchBEFlow</name>
      <anchorfile>classCAN4CQF_1_1IEEE8021QchBEFlow.html</anchorfile>
      <anchor>aff98829d1bd553eb70150b2131c2dbd7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>IEEE8021QchBEFlow &amp;</type>
      <name>operator=</name>
      <anchorfile>classCAN4CQF_1_1IEEE8021QchBEFlow.html</anchorfile>
      <anchor>a15c2f753efc13eabb5bd0839ca5b95b8</anchor>
      <arglist>(const IEEE8021QchBEFlow &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IEEE8021QchBEFlow *</type>
      <name>dup</name>
      <anchorfile>classCAN4CQF_1_1IEEE8021QchBEFlow.html</anchorfile>
      <anchor>a0a767586b125c50a6c7ef9bc1c84b0f8</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parsimPack</name>
      <anchorfile>classCAN4CQF_1_1IEEE8021QchBEFlow.html</anchorfile>
      <anchor>ab79c6ad8e0f3365408ee70ff7ab28842</anchor>
      <arglist>(omnetpp::cCommBuffer *b) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parsimUnpack</name>
      <anchorfile>classCAN4CQF_1_1IEEE8021QchBEFlow.html</anchorfile>
      <anchor>a38c6b3c434000007905ee7da16f09907</anchor>
      <arglist>(omnetpp::cCommBuffer *b) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint8_t</type>
      <name>getPcp</name>
      <anchorfile>classCAN4CQF_1_1IEEE8021QchBEFlow.html</anchorfile>
      <anchor>afe2e104ddf3eef4a5f646843b895b853</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPcp</name>
      <anchorfile>classCAN4CQF_1_1IEEE8021QchBEFlow.html</anchorfile>
      <anchor>afffcac59c0efa92e71aba5278f904a6e</anchor>
      <arglist>(uint8_t pcp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>getDe</name>
      <anchorfile>classCAN4CQF_1_1IEEE8021QchBEFlow.html</anchorfile>
      <anchor>a5f1eaf1f668412e76025f70a77e917aa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDe</name>
      <anchorfile>classCAN4CQF_1_1IEEE8021QchBEFlow.html</anchorfile>
      <anchor>a655182ec6d452abe3fe93eb6f68f8c5c</anchor>
      <arglist>(bool de)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint16_t</type>
      <name>getVID</name>
      <anchorfile>classCAN4CQF_1_1IEEE8021QchBEFlow.html</anchorfile>
      <anchor>ab93624a8cd13004f95f417e364632947</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setVID</name>
      <anchorfile>classCAN4CQF_1_1IEEE8021QchBEFlow.html</anchorfile>
      <anchor>a52b44ea80c062e9aace875d1c560f9d8</anchor>
      <arglist>(uint16_t VID)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getDisplayString</name>
      <anchorfile>classCAN4CQF_1_1IEEE8021QchBEFlow.html</anchorfile>
      <anchor>ab0da853f3ff661f8f79ef23b357b2378</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDisplayString</name>
      <anchorfile>classCAN4CQF_1_1IEEE8021QchBEFlow.html</anchorfile>
      <anchor>abf47ee2143c56aff33af34eb1fc17096</anchor>
      <arglist>(const char *displayString)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classCAN4CQF_1_1IEEE8021QchBEFlow.html</anchorfile>
      <anchor>a929c73f9512f2d0a0769c0f6a4514076</anchor>
      <arglist>(const IEEE8021QchBEFlow &amp;)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint8_t</type>
      <name>pcp</name>
      <anchorfile>classCAN4CQF_1_1IEEE8021QchBEFlow.html</anchorfile>
      <anchor>addc860dbeaf6d86c29b4e3cc2693ed95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>de</name>
      <anchorfile>classCAN4CQF_1_1IEEE8021QchBEFlow.html</anchorfile>
      <anchor>a69d7e6a88682ae36af328dc441bf2125</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint16_t</type>
      <name>VID</name>
      <anchorfile>classCAN4CQF_1_1IEEE8021QchBEFlow.html</anchorfile>
      <anchor>a76199588ce8df8c14c5e572376bd2d40</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>::omnetpp::opp_string</type>
      <name>displayString</name>
      <anchorfile>classCAN4CQF_1_1IEEE8021QchBEFlow.html</anchorfile>
      <anchor>a944e06b2871d33905312c92f9d9ce7da</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>copy</name>
      <anchorfile>classCAN4CQF_1_1IEEE8021QchBEFlow.html</anchorfile>
      <anchor>ad651440fa73be647530976ad10664903</anchor>
      <arglist>(const IEEE8021QchBEFlow &amp;other)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CAN4CQF::IEEE8021QchTTFlow</name>
    <filename>classCAN4CQF_1_1IEEE8021QchTTFlow.html</filename>
    <member kind="function">
      <type></type>
      <name>IEEE8021QchTTFlow</name>
      <anchorfile>classCAN4CQF_1_1IEEE8021QchTTFlow.html</anchorfile>
      <anchor>a65ad5eb3cce73dc04203c0f9b8e1f498</anchor>
      <arglist>(const char *name=nullptr, short kind=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IEEE8021QchTTFlow</name>
      <anchorfile>classCAN4CQF_1_1IEEE8021QchTTFlow.html</anchorfile>
      <anchor>a2be5429697e4a173446f4e21688b3718</anchor>
      <arglist>(const IEEE8021QchTTFlow &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~IEEE8021QchTTFlow</name>
      <anchorfile>classCAN4CQF_1_1IEEE8021QchTTFlow.html</anchorfile>
      <anchor>a0b12863b14c832859b9a1beef37f55f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>IEEE8021QchTTFlow &amp;</type>
      <name>operator=</name>
      <anchorfile>classCAN4CQF_1_1IEEE8021QchTTFlow.html</anchorfile>
      <anchor>ab153feea5ce31f8078ca06f9f4430c37</anchor>
      <arglist>(const IEEE8021QchTTFlow &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IEEE8021QchTTFlow *</type>
      <name>dup</name>
      <anchorfile>classCAN4CQF_1_1IEEE8021QchTTFlow.html</anchorfile>
      <anchor>a359fb0098b40423b114290d47fedd425</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parsimPack</name>
      <anchorfile>classCAN4CQF_1_1IEEE8021QchTTFlow.html</anchorfile>
      <anchor>a426333c0a84796d6f491718b212028fd</anchor>
      <arglist>(omnetpp::cCommBuffer *b) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parsimUnpack</name>
      <anchorfile>classCAN4CQF_1_1IEEE8021QchTTFlow.html</anchorfile>
      <anchor>a178e8a82f5350981351e0c094787e529</anchor>
      <arglist>(omnetpp::cCommBuffer *b) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint8_t</type>
      <name>getPcp</name>
      <anchorfile>classCAN4CQF_1_1IEEE8021QchTTFlow.html</anchorfile>
      <anchor>afb93accab35ca4aefbbd146b053f32e0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPcp</name>
      <anchorfile>classCAN4CQF_1_1IEEE8021QchTTFlow.html</anchorfile>
      <anchor>aa731805feed29ec4bd25f762eb2b4e39</anchor>
      <arglist>(uint8_t pcp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>getDe</name>
      <anchorfile>classCAN4CQF_1_1IEEE8021QchTTFlow.html</anchorfile>
      <anchor>ac96f03a9097cc35a7319eb581224f621</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDe</name>
      <anchorfile>classCAN4CQF_1_1IEEE8021QchTTFlow.html</anchorfile>
      <anchor>ac6bafc4c1eda7e4ce2942242bd8fcf0f</anchor>
      <arglist>(bool de)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint16_t</type>
      <name>getVID</name>
      <anchorfile>classCAN4CQF_1_1IEEE8021QchTTFlow.html</anchorfile>
      <anchor>ae8fc4a0aa780e51a5bf57a6c5f6f6154</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setVID</name>
      <anchorfile>classCAN4CQF_1_1IEEE8021QchTTFlow.html</anchorfile>
      <anchor>a67c3b46b916919665fc61709575091cf</anchor>
      <arglist>(uint16_t VID)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getDisplayString</name>
      <anchorfile>classCAN4CQF_1_1IEEE8021QchTTFlow.html</anchorfile>
      <anchor>adff828025c2cde922c518de6dc35af81</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDisplayString</name>
      <anchorfile>classCAN4CQF_1_1IEEE8021QchTTFlow.html</anchorfile>
      <anchor>a9ed0dd2ee00aba04fba609d946dda7f2</anchor>
      <arglist>(const char *displayString)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classCAN4CQF_1_1IEEE8021QchTTFlow.html</anchorfile>
      <anchor>ae79ada86ab3994763cfdf37d9f7d21bf</anchor>
      <arglist>(const IEEE8021QchTTFlow &amp;)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint8_t</type>
      <name>pcp</name>
      <anchorfile>classCAN4CQF_1_1IEEE8021QchTTFlow.html</anchorfile>
      <anchor>ab01b4bdffa0f7a11cc05712bdccf577f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>de</name>
      <anchorfile>classCAN4CQF_1_1IEEE8021QchTTFlow.html</anchorfile>
      <anchor>a5ff662db04f5323bd8d953a4b7f66e3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint16_t</type>
      <name>VID</name>
      <anchorfile>classCAN4CQF_1_1IEEE8021QchTTFlow.html</anchorfile>
      <anchor>a15e40d60a4c8675e4693c4886f43aab2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>::omnetpp::opp_string</type>
      <name>displayString</name>
      <anchorfile>classCAN4CQF_1_1IEEE8021QchTTFlow.html</anchorfile>
      <anchor>ac9371c43ffedc9efd16eb411a9d09517</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>copy</name>
      <anchorfile>classCAN4CQF_1_1IEEE8021QchTTFlow.html</anchorfile>
      <anchor>aa43ba93c268663c6b921be7f9d6dee9a</anchor>
      <arglist>(const IEEE8021QchTTFlow &amp;other)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CAN4CQF::PoolMessage</name>
    <filename>classCAN4CQF_1_1PoolMessage.html</filename>
    <base>omnetpp::cPacket</base>
    <member kind="function">
      <type></type>
      <name>PoolMessage</name>
      <anchorfile>classCAN4CQF_1_1PoolMessage.html</anchorfile>
      <anchor>aed0e277819e5241da8982f73d644d3a5</anchor>
      <arglist>(const char *name=nullptr, short kind=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PoolMessage</name>
      <anchorfile>classCAN4CQF_1_1PoolMessage.html</anchorfile>
      <anchor>a6ae2d8d208949b173b9e07edd0b15dd5</anchor>
      <arglist>(const PoolMessage &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PoolMessage</name>
      <anchorfile>classCAN4CQF_1_1PoolMessage.html</anchorfile>
      <anchor>ad70793e7bebc305df4b3dd68d692c4c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PoolMessage &amp;</type>
      <name>operator=</name>
      <anchorfile>classCAN4CQF_1_1PoolMessage.html</anchorfile>
      <anchor>a44f5f67a2779934c0e93d04d74ebd3f4</anchor>
      <arglist>(const PoolMessage &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PoolMessage *</type>
      <name>dup</name>
      <anchorfile>classCAN4CQF_1_1PoolMessage.html</anchorfile>
      <anchor>a2f95b756334d7dae4447998e36ac032d</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parsimPack</name>
      <anchorfile>classCAN4CQF_1_1PoolMessage.html</anchorfile>
      <anchor>a3489d49e3375c0b09c4c6ea732be6b66</anchor>
      <arglist>(omnetpp::cCommBuffer *b) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parsimUnpack</name>
      <anchorfile>classCAN4CQF_1_1PoolMessage.html</anchorfile>
      <anchor>abf7e93393cc32bd6c4f129752e2930f8</anchor>
      <arglist>(omnetpp::cCommBuffer *b) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual cMessagePointerList &amp;</type>
      <name>getPool</name>
      <anchorfile>classCAN4CQF_1_1PoolMessage.html</anchorfile>
      <anchor>a3d01913040aacc76eedcff3182e20d0b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const cMessagePointerList &amp;</type>
      <name>getPool</name>
      <anchorfile>classCAN4CQF_1_1PoolMessage.html</anchorfile>
      <anchor>a341ae4f9b3831efbcbcd4b736e149d87</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPool</name>
      <anchorfile>classCAN4CQF_1_1PoolMessage.html</anchorfile>
      <anchor>ab02815659281b4950d41ba1f9a9e08d0</anchor>
      <arglist>(const cMessagePointerList &amp;pool)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classCAN4CQF_1_1PoolMessage.html</anchorfile>
      <anchor>aeef91e21d3f1bff70b3756a705a2b711</anchor>
      <arglist>(const PoolMessage &amp;)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>cMessagePointerList</type>
      <name>pool</name>
      <anchorfile>classCAN4CQF_1_1PoolMessage.html</anchorfile>
      <anchor>ad686e5e9f73756600b6d761fd87a6e88</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>copy</name>
      <anchorfile>classCAN4CQF_1_1PoolMessage.html</anchorfile>
      <anchor>ae5a085499121b0af8d8b4cb8e4a78836</anchor>
      <arglist>(const PoolMessage &amp;other)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CAN4CQF::Rxgate</name>
    <filename>classCAN4CQF_1_1Rxgate.html</filename>
    <member kind="function">
      <type></type>
      <name>Rxgate</name>
      <anchorfile>classCAN4CQF_1_1Rxgate.html</anchorfile>
      <anchor>ac13f0653cab6b5a48f47abe3414c352e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setGateControlList</name>
      <anchorfile>classCAN4CQF_1_1Rxgate.html</anchorfile>
      <anchor>aa7d8cac79fe31eeadd12e74349f52079</anchor>
      <arglist>(string gcl)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>classCAN4CQF_1_1Rxgate.html</anchorfile>
      <anchor>ac16e830e16cb8a7827a806693589ffe0</anchor>
      <arglist>(int stage)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>numInitStages</name>
      <anchorfile>classCAN4CQF_1_1Rxgate.html</anchorfile>
      <anchor>a92fa3bf02e6ceb0547b6520ec80bd69a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleParameterChange</name>
      <anchorfile>classCAN4CQF_1_1Rxgate.html</anchorfile>
      <anchor>a5c39026786b5c9363b19ac96ff1ace36</anchor>
      <arglist>(const char *parname)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleMessage</name>
      <anchorfile>classCAN4CQF_1_1Rxgate.html</anchorfile>
      <anchor>a3cd46cdd4eeb1475b2be9a69da3da6e0</anchor>
      <arglist>(cMessage *msg)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>propagateGateControlElement</name>
      <anchorfile>classCAN4CQF_1_1Rxgate.html</anchorfile>
      <anchor>a9a8de626daaa65253abf0a1e8a983c19</anchor>
      <arglist>(vector&lt; string &gt; gateStates)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>scheduleCurrentGateControlElementTime</name>
      <anchorfile>classCAN4CQF_1_1Rxgate.html</anchorfile>
      <anchor>a5622e2878c91698822d4a69315e160ba</anchor>
      <arglist>(bool nextCycle)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>switchToFirstGateControlElement</name>
      <anchorfile>classCAN4CQF_1_1Rxgate.html</anchorfile>
      <anchor>acb886c4e9d410ca02011dc718fe386ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>switchToNextGateControlElement</name>
      <anchorfile>classCAN4CQF_1_1Rxgate.html</anchorfile>
      <anchor>a6f93a70358416d0a896cabc494d7ab1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector&lt; string &gt;</type>
      <name>initGatesStatus</name>
      <anchorfile>classCAN4CQF_1_1Rxgate.html</anchorfile>
      <anchor>a610485408cb0cf09e339880c5b2adbe3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector&lt; pair&lt; vector&lt; string &gt;, double &gt; &gt;</type>
      <name>gateControlList</name>
      <anchorfile>classCAN4CQF_1_1Rxgate.html</anchorfile>
      <anchor>a3b8cb2b6355118abe634b161696af20d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector&lt; pair&lt; vector&lt; string &gt;, double &gt; &gt;::iterator</type>
      <name>gateControlElement</name>
      <anchorfile>classCAN4CQF_1_1Rxgate.html</anchorfile>
      <anchor>a501e281c42b197d06e8011ec0cb5219a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>unsigned int</type>
      <name>numGates</name>
      <anchorfile>classCAN4CQF_1_1Rxgate.html</anchorfile>
      <anchor>adfd91d70482918ace7705a598f22c3fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>unsigned int</type>
      <name>configNo</name>
      <anchorfile>classCAN4CQF_1_1Rxgate.html</anchorfile>
      <anchor>a7e24982b2953ad9c3d4635ac74932534</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>string</type>
      <name>timerEventName</name>
      <anchorfile>classCAN4CQF_1_1Rxgate.html</anchorfile>
      <anchor>a33403f236a5a225a24431791819a118c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>CAN4CQF</name>
    <filename>namespaceCAN4CQF.html</filename>
    <class kind="class">CAN4CQF::IEEE8021QchBEFlow</class>
    <class kind="class">CAN4CQF::IEEE8021QchTTFlow</class>
    <class kind="class">CAN4CQF::PoolMessage</class>
    <class kind="class">CAN4CQF::Rxgate</class>
    <member kind="typedef">
      <type>std::list&lt; omnetpp::cMessage * &gt;</type>
      <name>cMessagePointerList</name>
      <anchorfile>namespaceCAN4CQF.html</anchorfile>
      <anchor>a47c803002d9932bdebcf77ceb107f466</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doParsimPacking</name>
      <anchorfile>namespaceCAN4CQF.html</anchorfile>
      <anchor>a2c25917425bc7f9783447737cc0667d9</anchor>
      <arglist>(omnetpp::cCommBuffer *b, const IEEE8021QchBEFlow &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doParsimUnpacking</name>
      <anchorfile>namespaceCAN4CQF.html</anchorfile>
      <anchor>a43b8b3414d214b8ac4987ac79f838b38</anchor>
      <arglist>(omnetpp::cCommBuffer *b, IEEE8021QchBEFlow &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doParsimPacking</name>
      <anchorfile>namespaceCAN4CQF.html</anchorfile>
      <anchor>ae56fdbe4539903205353b382ecd76cdb</anchor>
      <arglist>(omnetpp::cCommBuffer *b, const IEEE8021QchTTFlow &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doParsimUnpacking</name>
      <anchorfile>namespaceCAN4CQF.html</anchorfile>
      <anchor>aa72401a4cd71dd3c936be24beffb202b</anchor>
      <arglist>(omnetpp::cCommBuffer *b, IEEE8021QchTTFlow &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doParsimPacking</name>
      <anchorfile>namespaceCAN4CQF.html</anchorfile>
      <anchor>a50f8f0344e0949dd4f6cf4c80d1df727</anchor>
      <arglist>(omnetpp::cCommBuffer *b, const PoolMessage &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doParsimUnpacking</name>
      <anchorfile>namespaceCAN4CQF.html</anchorfile>
      <anchor>a362a02d857e1d3152eb509996abf571a</anchor>
      <arglist>(omnetpp::cCommBuffer *b, PoolMessage &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Define_Module</name>
      <anchorfile>namespaceCAN4CQF.html</anchorfile>
      <anchor>a83a8d6f3469bc428bf4c07f127c2abcc</anchor>
      <arglist>(Rxgate)</arglist>
    </member>
  </compound>
</tagfile>
